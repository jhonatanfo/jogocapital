@page "/criarcontacelular"
@inject IAuthService AuthService;
@inject NavigationManager _nav;



<EditForm Model="regModel" OnValidSubmit="HandleRegistration">
    <DataAnnotationsValidator />
    <ValidationSummary />

    @if (ShowErros)
    {
    <div class="alert alert-danger" role="alert">
        @foreach (var erro in Erros)
        {
        <p>@erro</p>
        }
    </div>
    }


    <section class="secao-iniciais acessar-com-celular">
        <div class="container sem-espaco">
            <div class="row sem-espaco">
                <div class="col-xs-12 col-sm-12 col-md-5 sem-espaco">
                    <div class="logo-img">
                        <img src="img/IMAGEM LOGO FUNDO TRANSPARENTE.png" />
                    </div>
                </div>
                <div class="col-xs-12 col-sm-12 col-md-7 sem-espaco">
                    <div class="entrar">
                        <div>
                            <h1 class="titulo">Criar sua conta</h1>

                            <div class="campo-form">
                                <img src="img/icon-celular.png" class="icon-celular">
                                <RadzenMask class="campo-tel" Mask="(**) * ****-****" Pattern="[^0-9]"
                                    Placeholder="(00) 0 0000-0000" ID="Mob" Name="Mob" @bind-Value="regModel.celular" />
                            </div>

                            <div class="campo-form">
                                <img src="img/icon-senha.png" class="icon-senha">
                                <RadzenPassword class="campo-senha" ID="Pwd1" Name="Pwd1" Placeholder="digite sua senha"
                                    @bind-Value="regModel.senha" />
                            </div>

                            <div class="campo-form">
                                <img src="img/icon-senha.png" class="icon-senha">
                                <RadzenPassword class="campo-senha" ID="Pwd2" Name="Pwd2" Placeholder="repita sua senha"
                                    @bind-Value="regModel.confirmarSenha" />
                            </div>

                            <div style="clear: both;"></div>
                            <br class="espaco-mobile">
                            <br class="espaco-mobile">

                            <div class="idade">
                                <input type="checkbox" ID="Idd" Name="Idd" @bind-value="confIdade">
                                <p> Eu tenho mais de 18 anos</p>
                            </div>


                            <div class="termos">
                                <input type="checkbox" ID="Trm" Name="Trm" @bind-value="confTermo">
                                <p> Concordo com a politica de privacidade<br> e aceito os <u> Termos e Condições</u>
                                </p>
                            </div>


                            <div class="btg-entrar-esqueceu-senha">
                                <button class="btn-criar"> CADASTRAR </button>
                            </div>

                            <button class="btn-voltar" @onclick="@(()=>_nav.NavigateTo(" /criarconta"))">
                                <img src="img/icon-voltar.png">
                                <p>Voltar</p>
                            </button>




                        </div>

                    </div>
                </div>
            </div>
        </div>
    </section>


</EditForm>

@code {
private usuariosCadastrarseCelularModel regModel = new usuariosCadastrarseCelularModel();
private bool ShowErros;
private bool ShowContraSenha = false;
private bool confIdade = false;
private bool confTermo = false;
private IEnumerable<string> Erros;
    private string estagio = "Cadastrar-se";
    protected override void OnInitialized()
    {
    estagio = "Cadastrar-se";
    ShowContraSenha = false;
    regModel.confirmarCodigo = "0";
    }
    private async Task HandleRegistration()
    {
    ShowErros = false;
    if(confIdade == false){
    Erros = new string[1] { "Só Maiores de Idade Podem Se Cadastrar !" };
    ShowErros = true;
    StateHasChanged();
    } else {
    if(confTermo == false){
    Erros = new string[1] { "É Obrigatório Aceitar os Termos e Condiçòes !" };
    ShowErros = true;
    StateHasChanged();
    } else {
    if (ShowContraSenha == false)
    {
    var result = await AuthService.RegisterCelular(regModel);
    if (result.Sucesso)
    {
    //ShowContraSenha = true;
    //estagio = "Confirmar";
    _nav.NavigateTo("/verificarcadastros/" + regModel.celular + "/0");
    }
    else
    {
    Erros = result.Erros;
    ShowErros = true;
    }
    } else
    {
    var result = await AuthService.ValidarCelular(regModel);
    if (result.Sucesso)
    {
    _nav.NavigateTo("/Acessar");
    }
    else
    {
    estagio = "Cadastrar-se";
    regModel.confirmarCodigo = "0";
    ShowContraSenha = false;
    Erros = result.Erros;
    ShowErros = true;
    }
    }
    }
    }
    }
    }